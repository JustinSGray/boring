branches:
  only:
    - master

os:
  - linux

env:
  matrix:
  - PY=3.6

language:
  - generic

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin
    ssh_known_hosts:
      - web543.webfaction.com


install:
# copy SNOPT from webfaction

# - if [ "$encrypted_dfafc1356502_key" ]; then
#     openssl aes-256-cbc -K $encrypted_dfafc1356502_key -iv $encrypted_dfafc1356502_iv -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d;
#     eval "$(ssh-agent -s)";
#     chmod 600 /tmp/travis_deploy_rsa;
#     ssh-add /tmp/travis_deploy_rsa;
#     echo -e "Host web543.webfaction.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config;
#   else
#     echo "KEY NOT FOUND";
#   fi

- |
  echo "Building python environment...";
  wget "https://repo.continuum.io/miniconda/Miniconda${PY:0:1}-latest-Linux-x86_64.sh" -O miniconda.sh -q;
  chmod +x miniconda.sh;
  bash miniconda.sh -b -p $HOME/miniconda -u;
  source "$HOME/miniconda/etc/profile.d/conda.sh";
  hash -r;
  conda config --set always_yes yes --set changeps1 no;
  conda update -q conda;
  conda info -a;

  conda create --yes -n PY$PY python=$PY;
  conda activate PY$PY;
  conda config --add channels conda-forge;

  conda install --yes cython sphinx mock swig pip numpy=1.17.2 scipy=1.3.1 mpi4py matplotlib sqlitedict;
  sudo apt-get install texlive-latex-extra

  python -m pip install --upgrade pip --user;

  echo " >> Installing optional packages for test coverage";
  python -m pip install psutil objgraph git+https://github.com/mdolab/pyXDSM;

  python -m pip install testflo --user;
  python -m pip install ssh --user;
  python -m pip install pdflatex --user;

  echo " >> Installing pyOptSparse";
  echo "  > Cloning pyOptSparse from mdolab";
  git clone https://github.com/mdolab/pyoptsparse.git;
  cd pyoptsparse;
  git checkout tags/v1.2;

  if [ "$SNOPT_LOCATION75" ] && [ "${PY:0:1}" = "3" ]; then
    cd pyoptsparse/pySNOPT;
    echo "  > Secure copying SNOPT over SSH";
    scp -r "$SNOPT_LOCATION75" .;
    cd ../..;
  else
    echo "SNOPT_LOCATION NOT FOUND";
  fi

  echo "  > Install pyOptSparse";
  pip install -r requirements.txt;
  pip install .;
  cd ..;


# Install Dymos
- python -m pip install git+https://github.com/OpenMDAO/dymos.git --user;

# Install TMS
# - python -m pip install git+ssh://git@github.com/OpenMDAO/TMS.git;

# Install pycycle
# - python -m pip install git+ssh://git@github.com/OpenMDAO/pycycle.git;


# Install OpenMDAO
- |
  echo "Installing here because we need to override Dymos's versions requirement for OpenMDAO"
  git clone https://github.com/OpenMDAO/OpenMDAO.git
  cd OpenMDAO;
  pip install . --force-reinstall ;
  echo "OpenMDAO commit: ";
  git rev-parse HEAD;
  cd ..;

# install boring itself in developer mode.
- cd boring;
- pip install -e .;

# display summary of installed packages and their versions
- conda list;

- cd boring/XDSM;
- python ODE_XDSM.py;
- python Design_XDSM.py;
- cd ../..;

script:
- export OMPI_MCA_rmaps_base_oversubscribe=1
- echo "Running Testflo"
- cd boring
- pwd
- python `which testflo` -n 1 --timeout=120 --show_skipped;
